version: 2

defaults: &defaults
#  working_directory: ~/repo
  docker: # use the docker executor type; machine and macos executors are also supported
    - image: circleci/node:8.11.1 # the primary container, where your job's commands are run
  branches:
    ignore:
      - gh-pages

workflows:
  version: 2
  master:
    jobs:
      - dependencies
      - lint:
          requires:
            - dependencies
      - test:unit:
          requires:
            - dependencies
      - test:unit-coverage:
          requires:
            - dependencies
      - "Send to Codecov"
          requires:
            - test:unit-coverage
      - build:
          requires:
            - dependencies
      - semantic-release:
          requires:
            - build
            - test:unit

#          filters:
#            branches:
#              only: master

jobs:
  # TODO normal name
  dependencies:
    <<: *defaults
    steps:
      - checkout # check out the code in the project directory
      - restore_cache: # Restores a previously saved cache based on a key (or keys)
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-cache-{{ checksum "yarn.lock" }}
      - run: # used for invoking all command-line programs
          name: Install Dependencies
          command: yarn install --frozen-lockfile # yarn install --frozen-lockfile
      - save_cache: # Generates and stores a cache of a file or directory of files
          name: Save Yarn Package Cache
          key: yarn-packages-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ~/.cache/yarn

  lint:
    <<: *defaults
    steps:
      #      - run: yarn test:unit
      #      - run: yarn test:unit-coverage
      #      - run:
      #          name: Send to Codecov
      #          command: "bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN"
      - run: yarn lint-show

  test:unit:
    <<: *defaults
    steps:
      - run: yarn test:unit

  test:unit-coverage:
    <<: *defaults
    steps:
      - run: yarn test:unit-coverage

  "Send to Codecov":
    <<: *defaults
    steps:
      - run: "bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN"

  build:
    <<: *defaults
    steps:
      - run: yarn build

  semantic-release:
    <<: *defaults
    steps:
      - run: yarn semantic-release
